pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-creds')
        APP_NAME = 'my-app'
        BUILD_TAG = "${APP_NAME}:${BUILD_NUMBER}"
        DOCKER_HUB_REPO = "${DOCKER_HUB_CREDENTIALS_USR}/${APP_NAME}"
        AWS_REVIEW_IP = '<IP_AWS_REVIEW>'
    }

    stages {
        stage('Build') {
            steps {
                echo 'üì¶ Clonage et construction...'
                git branch: 'main', url: 'https://github.com/khadijacharafi/projetdevops2.git'
                sh 'docker build -t $BUILD_TAG .'
            }
        }

        stage('Test') {
            steps {
                echo 'üîç Test de l‚Äôimage Docker...'
                sh '''
                docker run -d -p 8087:80 --name test-container $BUILD_TAG
                sleep 5
                curl --retry 5 --retry-delay 5 http://localhost:8087
                docker stop test-container && docker rm test-container
                '''
            }
        }

        stage('Release') {
            steps {
                echo 'üì§ Pushing image to Docker Hub...'
                sh '''
                echo ${DOCKER_HUB_CREDENTIALS_PSW} | docker login -u ${DOCKER_HUB_CREDENTIALS_USR} --password-stdin
                docker tag $BUILD_TAG $DOCKER_HUB_REPO:$BUILD_NUMBER
                docker push $DOCKER_HUB_REPO:$BUILD_NUMBER
                '''
            }
        }

        stage('Deploy Review') {
            steps {
                echo 'üöÄ D√©ploiement sur AWS...'
                sshagent(['aws-ssh-key']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@$AWS_REVIEW_IP "
                    docker stop \$(docker ps -q) && docker rm \$(docker ps -aq) || true
                    docker pull $DOCKER_HUB_REPO:$BUILD_NUMBER
                    docker run -d -p 80:80 --name my-app $DOCKER_HUB_REPO:$BUILD_NUMBER
                    "
                    '''
                }
            }
        }
    }
    post {
        always {
            echo 'üßπ Nettoyage...'
            sh 'docker logout'
        }
    }
}